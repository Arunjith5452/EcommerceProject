<%- include("../../views/partials/admin/header") %>
    <style>
        .badge.alert-pending {
            background-color: #fff3cd;
            color: #856404;
        }

        .badge.alert-processing {
            background-color: #cce5ff;
            color: #004085;
        }

        .badge.alert-shipped {
            background-color: #d4edda;
            color: #155724;
        }

        .badge.alert-delivered {
            background-color: #28a745;
            color: #fff;
        }

        .badge.alert-cancelled {
            background-color: #f8d7da;
            color: #721c24;
        }

        .badge.alert-returned {
            background-color: #e2e3e5;
            color: #383d41;
        }

        .table td {
            vertical-align: middle;
        }

        .dropdown-toggle::after {
            display: none;
        }

        .status-select {
            min-width: 120px;
            padding: 0.25rem;
        }
    </style>
    <section class="content-main">
        <div class="content-header">
            <h2 class="content-title card-title">Order List</h2>
        </div>
        <div class="card mb-4">
            <header class="card-header">
                <div class="row gx-3">
                    <div class="col-lg-4 col-md-6 me-auto">
                        <form action="" method="GET">
                            <!-- <input type="text" name="search" value="<%= search %>" placeholder="Search..." -->
                            <!-- class="form-control" /> -->
                        </form>
                    </div>
                </div>
            </header>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>#ID</th>
                                <th scope="col">Name</th>
                                <th scope="col">Total</th>
                                <th scope="col">Status</th>
                                <th scope="col">Date</th>
                                <th scope="col" class="text-end">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% orders.forEach((order)=> { %>

                                <tr>
                                    <td>
                                        <%= order.orderId.slice(0,12)%>
                                    </td>
                                    <td>
                                        <%= order.address ? order.address.name : 'N/A' %> </b>
                                    </td>
                                    </td>

                                    <td>
                                        â‚¹ <%=order.finalAmount%>
                                    </td>
                                    <td>
                                        <% if (order.status==='Return Request' ) { %>
                                            <span class="badge bg-warning">Return Pending</span>
                                        <% } else if (order.status==='Cancelled' || order.status==='Returned') { %>
                                            <span class="badge <%= order.status==='Cancelled' ? 'bg-danger' : 'bg-secondary' %>">
                                                <%= order.status %>
                                            </span>
                                        <% } else { %>
                                            <select class="form-select form-select-sm status-select"
                                                onchange="updateOrderStatus('<%= order.orderId %>', this.value)">
                                                <% ['Pending', 'Processing' , 'Shipped' , 'Delivered' , 'Cancelled' , 'Returned' ].forEach(status=> { %>
                                                    <option value="<%= status %>" <%=order.status===status ? 'selected' : '' %>>
                                                        <%= status %>
                                                    </option>
                                                <% }) %>
                                            </select>
                                        <% } %>
                                    </td>
                                    <td>
                                        <%= formatDate(order.createdOn) %>
                                    </td>
                                    <td class="text-end">
                                        <button class="btn btn-md rounded font-sm"
                                            onclick="showOrderDetails('<%= order.orderId %>')">Detail</button>

                                    </td>
                                </tr>

                                <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <%- include("../../views/partials/admin/pagination") %>
            <div class="modal fade" id="orderDetailsModal" tabindex="-1">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Order Details</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body" id="orderDetailsContent">
                        </div>
                    </div>
                </div>
            </div>



            <script>
               function updateOrderStatus(orderId, status) {
    Swal.fire({
        title: `Change status to "${status}"?`,
        text: "This action cannot be undone!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, update it!"
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/admin/updateOrderStatus/${orderId}`, {
                method: 'PATCH',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ status })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: "Updated!",
                        text: "Order status has been changed.",
                        icon: "success",
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => location.reload());
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: "Failed to update order status.",
                        icon: "error",
                        confirmButtonColor: "#d33"
                    });
                }
            })
            .catch(error => {
                console.error("Error:", error);
                Swal.fire({
                    title: "Oops!",
                    text: "Something went wrong. Try again later.",
                    icon: "error",
                    confirmButtonColor: "#d33"
                });
            });
        }
    });
}

                function showOrderDetails(orderId) {
                    const modal = new bootstrap.Modal(document.getElementById('orderDetailsModal'));
                    const content = document.getElementById('orderDetailsContent');

                    content.innerHTML = '<div class="text-center"><div class="spinner-border"></div></div>';
                    modal.show();

                    fetch(`/admin/userOrderDetails/${orderId}`)
                        .then(response => {
                            if (!response.ok) {
                                return response.text().then(text => {
                                    console.error('Error Response Text:', text);
                                    throw new Error(`HTTP error! status: ${response.status}`);
                                });
                            }
                            return response.json();
                        })
                        .then(data => {
                            let returnRequestButtons = '';
                            if (data.order.status === 'Return Request' &&
                                data.order.returnStatus !== 'Approved' &&
                                data.order.returnStatus !== 'Rejected') {
                                returnRequestButtons = `
                    <div class="mt-3">
                        <h6>Return Request</h6>
                        <p>Reason: ${data.order.returnReason || 'Not specified'}</p>
                        ${data.order.orderedItems.map(item => {
                                    if (item.returnRequested || item.status == 'Return Request') {
                                        return `
                                    <div class="mb-2">
                                        <p>Product: ${item.product.productName}</p>
                                        <button class="btn btn-success me-2" onclick="handleReturnRequest('${orderId}', 'approve', '${item.product._id}' , '${item.size}')">
                                            Approve Return
                                        </button>
                                        <button class="btn btn-danger" onclick="handleReturnRequest('${orderId}', 'reject', '${item.product._id}' , '${item.size}')">
                                            Reject Return
                                        </button>
                                    </div>
                                `;
                                    }
                                    return '';
                                }).join('')}
                    </div>
                `;
                            }

                            content.innerHTML = `
                <div class="container-fluid">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <h6>Order Information</h6>
                            <p>Order ID: ${data.order.orderId}</p>
                            <p>Date: ${new Date(data.order.createdOn).toLocaleString()}</p>
                            <p>Status: <span class="badge alert-${data.order.status.toLowerCase()}">${data.order.status}</span></p>
                            <p>Total: â‚¹${data.order.finalAmount}</p>
                            ${data.order.returnStatus ? `<p>Return Status: ${data.order.returnStatus}</p>` : ''}
                        </div>
                        <div class="col-md-6">
                            <h6>Customer Details</h6>
                            <p>Name: ${data.order.address ? data.order.address.name : 'N/A'}</p>
                            <p>Phone: ${data.order.address ? data.order.address.phone : 'N/A'}</p>
                            <p>Address: ${data.order.address ?
                                    `${data.order.address.landMark || ''}, 
                                ${data.order.address.city || ''}, 
                                ${data.order.address.state || ''} 
                                ${data.order.address.pincode || ''}`.trim() : 'N/A'}</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <h6>Items</h6>
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Image</th>                       
                                        <th>Quantity</th>
                                        <th>Size</th>
                                        <th>Price</th>
                                        <th>Total</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
${data.order.orderedItems.map(item => `
    <tr>
        <td>${item.product.productName}</td>
        <td><img 
            src="/uploads/product-images/${item.product.productImage[0]}" 
            style="width: 50px; height: 50px; object-fit: cover;"
            onerror="this.src='/path/to/default/image.jpg'"
        ></td>
        <td>${item.quantity}</td>
        <td>${item.size}</td>
        <td>â‚¹${item.price}</td>
        <td>â‚¹${item.quantity * item.price}</td>
        <td>
            ${item.status}
            ${item.status === 'Cancelled' ? `<p class="text-danger">Cancel Reason: ${item.cancelReason || 'No reason provided'}</p>` : ''}
        </td>
    </tr>
`).join('')}                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                ${returnRequestButtons}
            `;
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            content.innerHTML = `<div class="alert alert-danger">Error loading order details: ${error.message}</div>`;
                        });
                }
                function cancelSingleItem(orderId, productId ,size) {
    Swal.fire({
        title: 'Are you sure?',
        text: 'Do you want to cancel this item?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, cancel it!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/admin/userOrderCancel/${orderId}`, {
                method: 'PATCH',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ productId,size })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire('Cancelled!', 'The item has been cancelled.', 'success')
                            .then(() => location.reload());
                    } else {
                        Swal.fire('Error!', data.message || 'Error cancelling item', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire('Error!', 'Error cancelling item', 'error');
                });
        }
    });
}

function handleReturnRequest(orderId, action, productId ,size) {

    if (!size) {
        console.error('Size parameter is required');
        Swal.fire('Error!', 'Size parameter is missing', 'error');
        return;
    }

    Swal.fire({
        title: 'Are you sure?',
        text: `Do you want to ${action} this return request?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: `Yes, ${action} it!`
    }).then((result) => {
        if (result.isConfirmed) {
            console.log('Sending request with:', {
                orderId,
                action,
                productId,
                size
            });
            fetch(`/admin/handleReturnRequest/${orderId}`, {
                method: 'PATCH',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ action, productId ,size })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire('Processed!', `The return request has been ${action}ed.`, 'success')
                            .then(() => location.reload());
                    } else {
                        Swal.fire('Error!', data.message || 'Error processing return request', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire('Error!', 'Error processing return request', 'error');
                });
        }
    });
}

            </script>
            <%- include("../../views/partials/admin/footer") %>