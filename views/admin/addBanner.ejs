<%- include("../../views/partials/admin/header") %>

<style>
    .error-message {
        color: #dc3545;
        margin-top: 5px;
        font-size: 14px;
        display: none;
    }

    .card {
        background-color: #fff;
        border-radius: .25rem;
        margin-bottom: 1.5rem;
        box-shadow: 0 2px 6px rgba(218, 218, 253, 0.65), 0 2px 6px rgba(206, 206, 238, 0.54);
    }

    :root {
        --blue: #0071FF;
        --light-blue: #B6DBF6;
        --grey: #f2f2f2;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Poppins', sans-serif;
    }

    body {
        background: var(--light-blue);
    }

    .img-area {
        position: relative;
        width: 100%;
        height: 240px;
        background: var(--grey);
        margin-bottom: 30px;
        border-radius: 15px;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }

    .img-area .icon {
        font-size: 100px;
    }

    .img-area img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: none;
    }

    .select-image {
        width: 100%;
        padding: 16px;
        border-radius: 15px;
        background: var(--blue);
        color: #fff;
        font-weight: 500;
        border: none;
        cursor: pointer;
        transition: all .3s ease;
    }

    .thumbnails-container {
        display: flex;
        overflow-x: auto;
        padding: 10px;
        gap: 10px;
    }

    .thumbnail {
        position: relative;
        min-width: 60px;
    }

    .thumbnail img {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 4px;
    }

    .remove-icon {
        position: absolute;
        top: -8px;
        right: -8px;
        background: #dc3545;
        color: white;
        border-radius: 50%;
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        font-size: 14px;
    }

    .spinner-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.8);
        display: none;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }
</style>

<div class="spinner-overlay" id="loadingSpinner">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>

<section class="content-main">
    <div class="row">
        <div class="col-9">
            <div class="content-header">
                <h2 class="content-title">Add New Banner</h2>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-body">
                    <form method="post" action="/admin/addBanner" enctype="multipart/form-data" id="bannerForm">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Banner Title</label>
                            <input type="text" placeholder="Enter banner title" name="title" class="form-control" id="product_name" maxlength="100">
                            <div id="productName-error" class="error-message"></div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Description</label>
                            <textarea placeholder="Enter banner description" name="description" class="form-control" rows="4" maxlength="500"></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>

                        <div class="mb-4">
                            <label for="startingDate" class="form-label">Start Date</label>
                            <input type="date" name="startDate" class="form-control" id="startingDate">
                            <div id="error-start-date" class="error-message"></div>
                        </div>

                        <div class="mb-4">
                            <label for="expiringDate" class="form-label">End Date</label>
                            <input type="date" name="endDate" class="form-control" id="expiringDate">
                            <div id="error-end-date" class="error-message"></div>
                        </div>

                        <div class="card-header">
                            <h4>Choose Banner Image</h4>
                        </div>

                        <div class="border row">
                            <div id="addedImagesContainer" class="thumbnails-container"></div>
                        </div>

                        <div class="card-body">
                            <div class="img-area mb-4">
                                <img id="imgView">
                                <div class="icon">ðŸ“·</div>
                                <h3>Upload Image</h3>
                                <p>Image size should be less than <span>5MB</span></p>
                            </div>
                            
                            <input class="form-control" type="file" name="images" id="inputFile" accept="image/png, image/jpeg, image/jpg">
                            <div id="image-error" class="error-message"></div>
                        </div>

                        <div class="mt-4">
                            <button class="btn btn-primary" type="button" onclick="validateAndSubmit()">
                                <span class="button-text">Publish Banner</span>
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
function validateAndSubmit() {
    if (validateForm()) {
        document.getElementById("loadingSpinner").style.display = "flex";
        document.getElementById("bannerForm").submit();
    }
}

function validateForm() {
    resetErrorMessages();
    let isValid = true;
    
    const productName = document.getElementById("product_name").value.trim();
    if (!productName) {
        displayErrorMessage("productName-error", "Title is required");
        isValid = false;
    }
    
    let bannerTitleInput = document.getElementById("bannerTitle");
    
    if (!bannerTitleInput) {
        console.error("Error: Element with ID 'bannerTitle' not found!");
        return false;
    }

    let bannerTitle = bannerTitleInput.value.trim(); // This prevents the 'undefined' error

    if (bannerTitle === "") {
        alert("Banner title cannot be empty!");
        return false;
    }


    const startDate = document.getElementById("startingDate").value;
    const endDate = document.getElementById("expiringDate").value;
    
    if (!startDate) {
        displayErrorMessage("error-start-date", "Start date is required");
        isValid = false;
    }
    
    if (!endDate) {
        displayErrorMessage("error-end-date", "End date is required");
        isValid = false;
    } else if (startDate && new Date(startDate) > new Date(endDate)) {
        displayErrorMessage("error-end-date", "End date must be after start date");
        isValid = false;
    }

    return isValid;
}

document.addEventListener("DOMContentLoaded", function () {
    const fileInput = document.getElementById("fileInput");
    const previewContainer = document.getElementById("previewContainer");
    const imgView = document.getElementById("imgView");

    fileInput.addEventListener("change", function (event) {
        const files = event.target.files;
        previewContainer.innerHTML = ""; // Clear previous thumbnails

        if (files.length > 0) {
            imgView.style.display = "block"; // Show main preview
            const firstFile = files[0];
            imgView.src = URL.createObjectURL(firstFile); // Main preview image

            Array.from(files).forEach((file, index) => {
                if (file.type.startsWith("image/")) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const thumbnailDiv = document.createElement("div");
                        thumbnailDiv.classList.add("thumbnail");

                        const imgElement = document.createElement("img");
                        imgElement.src = e.target.result;
                        imgElement.classList.add("thumb-img");

                        const removeButton = document.createElement("button");
                        removeButton.textContent = "X";
                        removeButton.classList.add("remove-btn");

                        removeButton.onclick = function () {
                            thumbnailDiv.remove();
                            if (previewContainer.children.length === 0) {
                                imgView.style.display = "none"; // Hide main preview if no images left
                            }
                        };

                        thumbnailDiv.appendChild(imgElement);
                        thumbnailDiv.appendChild(removeButton);
                        previewContainer.appendChild(thumbnailDiv);
                    };
                    reader.readAsDataURL(file);
                }
            });
        } else {
            imgView.style.display = "none"; // Hide if no images selected
        }
    });
});


function resetErrorMessages() {
    document.querySelectorAll(".error-message").forEach(el => el.style.display = "none");
}

function displayErrorMessage(id, message) {
    document.getElementById(id).textContent = message;
    document.getElementById(id).style.display = "block";
}
</script>
